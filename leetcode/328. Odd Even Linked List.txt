/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        ListNode* head2=NULL,*tail2=NULL,*ptr=head,*pre=head,*evenNode;
        for(int i=1;ptr!=NULL;i++){
            if(i%2 == 0){
                evenNode = ptr;
                ptr = ptr->next;
                pre->next = ptr;
                if(head2 == NULL){
                    head2 = tail2 = evenNode;
                }
                else{
                    tail2->next = evenNode;
                    tail2 = tail2->next;
                }
            }
            
            else{
                pre = ptr;
                ptr = ptr->next;
            }
        }
        if(tail2 != NULL){
        pre->next = head2;
        
        tail2->next = NULL;
        }
        return head;
    }
};