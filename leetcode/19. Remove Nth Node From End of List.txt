/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    int lastNthNode(ListNode* head, int n){
        if(head == NULL){
            return 1;
        }
        int t = lastNthNode(head->next,n);
        if(t == -1){        //The node to be removes has already been removed
            return -1;
        }
        if(t-1 == n){
            head->next = head->next->next;
            return -1;
        }
        return t+1;
    }
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        if(head == NULL || head->next == NULL){
            return NULL;
        }
        int t = lastNthNode(head, n);
        if(t != -1){
            head = head->next;
        }
        return head;
    }
};