/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int max = 0;
    void traverse(TreeNode* root, int dir, int cnt){
        if(root == NULL)
            return;
        if(dir){
            if(root->right != NULL){
                traverse(root->right,0,cnt+1);
            }
            else if(cnt > max){
                max = cnt;
            }
            if(root->left != NULL){
                traverse(root->left, 1, 1);
            }
        }
        else{
            if(root->left != NULL){
                traverse(root->left,1,cnt+1);
            }
            else if(cnt > max){
                max = cnt;
            }
            if(root->right != NULL){
                traverse(root->right, 0, 1);
            }
        }
    }
    int longestZigZag(TreeNode* root) {
        if(root == NULL){
            return 0;
        }
        if(root->left != NULL)
        traverse(root,0,0);
        if(root->right != NULL)
        traverse(root,1,0);
        return max;
    }
};