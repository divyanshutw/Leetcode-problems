/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    map<int,int> freq;
    int maxFreq = 0;
    vector<int> maxFreqList;
    void inOrder(TreeNode* root){
        if(root == NULL){
            return;
        }
        inOrder(root->left);
        
        freq[root->val] = freq.find(root->val) != freq.end() ? freq[root->val]+1 : 1;
        if(freq[root->val] > maxFreq){
            vector<int> v;
            v.push_back(root->val);
            maxFreqList = v;
            maxFreq = freq[root->val];
        }
        else if(freq[root->val] == maxFreq){
            maxFreqList.push_back(root->val);
        }
        
        inOrder(root->right);
    }
    vector<int> findMode(TreeNode* root) {
        inOrder(root);
        return maxFreqList;
    }
};