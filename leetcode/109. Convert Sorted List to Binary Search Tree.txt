/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* sortedListToBST(ListNode* head) {
        if(head == NULL){
            return NULL;
        }
        if(head->next == NULL){
            TreeNode* root = new TreeNode;
            root->val = head->val;
            root->left = root->right = NULL;
            return root;
        }
        ListNode* sptr=head,*fptr=head,*spreptr=head;
        while(sptr != NULL && fptr != NULL && fptr->next != NULL){
            spreptr = sptr;
            sptr = sptr->next;
            fptr = fptr->next->next;
        }
        TreeNode* root = new TreeNode;
        root->val = sptr->val;
        spreptr->next = NULL;
        root->left = sortedListToBST(head);
        root->right = sortedListToBST(sptr->next);
        return root;
    }
};