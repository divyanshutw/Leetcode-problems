class Solution {
public:
    int fun(int s,int e,int k,int cur){
        if(cur == k && s == e){
            return 1;
        }
        else if(cur<k){
            int l=fun(s-1,e,k,cur+1);
            int r=fun(s+1,e,k,cur+1);
            return l+r;
        }
        else{
            return 0;
        }
    }
    int numberOfWays(int s, int e, int k) {
        if(e-s > k)
            return 0;
        int dp[k+1][k*2+1],l,r,i,j;
        for(i=0;i<k*2+1;i++){
            dp[k][i]=0;
        }
        dp[k][k-s+e]=1;
        for(i=k-1;i>=0;i--){
            for(j=0;j<k*2+1;j++){
                l = j==0 ? 0 : dp[i+1][j-1];
                r = j==k*2 ? 0 : dp[i+1][j+1];
                dp[i][j] = (l+r)%1000000007;
            }
        }
        return dp[0][k];
    }
};