/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> largestValues(TreeNode* root) {
        vector<int> ans;
        queue<TreeNode*> q;
        int max;
        if(root == NULL){
            return ans;
        }
        q.push(root);
        q.push(NULL);
        while(!(q.empty() || q.size()==1&&q.front()==NULL)){
            max = -2147483648;
            while(q.front() != NULL){
                if(q.front()->left != NULL){
                    q.push(q.front()->left);
                }
                if(q.front()->right != NULL){
                    q.push(q.front()->right);
                }
                if(q.front()->val > max){
                    max = q.front()->val;
                }
                q.pop();
            }
            ans.push_back(max);
            q.pop();
            q.push(NULL);
        }
        return ans;
    }
};