class Solution {
public:
    // Binary search
    
    // int search(vector<int>& m, int target) {
    //     int i=0,n=m.size(),k=n-1,j=(i+k)/2;
    //     while(i<=k){
    //         j=(i+k)/2;
    //         if(m[j] == target){
    //             return j;
    //         }
    //         else if(m[j] < target){
    //             i = j+1;
    //         }
    //         else{
    //             k = j-1;
    //         }
    //     }
    //     return -1;
    // }
    
    // Ternary search
     int search(vector<int>& m, int target) {
        int n=m.size(),i=0,l=n-1,j=(i+l)/3,k=(i+l)*2/3;
         while(i<=l){
             j=i+((l-i)/3);
             k=i+((l-i)*2/3);
             if(m[j] == target){
                 return j;
             }
             else if(m[k] == target){
                 return k;
             }
             else if(target>=m[i] && target<=m[j]){
                 l = j-1;
             }
             else if(target>=m[j] && target<=m[k]){
                 i = j+1;
                 l = k-1;
             }
             else{
                 i = k+1;
             }
         }
         return -1;
    }
};